Given three integers (, , and ) representing the three sides of a triangle, identify whether the triangle is scalene, isosceles, or equilateral.

If all three sides are equal, output EQUILATERAL.
Otherwise, if any two sides are equal, output ISOSCELES.
Otherwise, output SCALENE.
Input Format

Three integers, each on a new line.

Constraints


The sum of any two sides will be greater than the third.

Output Format

One word: either "SCALENE" or "EQUILATERAL" or "ISOSCELES" (quotation marks excluded).

Sample Input

Sample Input 1

2
3
4
Sample Input 2

6
6
6  
Sample Output

Sample Output 1

SCALENE
Sample Output 2

EQUILATERAL  
_______________________________________________________________________________________________________________________________
if statements in Bash are often used in four important ways:

1. if...then...fi statements
2. if...then...fi...else statements  
3. if..elif..else..fi  
4. if..then..else..if..then..fi..fi.. (Nested Conditionals)
Their structure is

if [[ condition ]]
then
	do this
elif [[ condition ]]; then
	do this
else
	do this by default
fi
Note that there must be spaces between the brackets and their enclosing text. An or condition is || and an and condition is &&. Also note that then is required after if and elif but not after else. It must be separated from the conditional by either a newline or a ; which represents a newline to bash. The entire if clause is terminated with fi.
________________________________________________________________________________________________________________________________
Code -

#!/usr/bin/env bash
read X
read Y
read Z

if [[ "$X" == "$Y" && "$X" == "$Z" ]]
 then
    echo 'EQUILATERAL'
elif [[ "$X" == "$Y" || "$X" == "$Z" || "$Y" == "$Z" ]] 
 then
    echo 'ISOSCELES'
else
    echo 'SCALENE'
fi
